using System;
using GameLogic;

public class Character
{
    private StateMachine<string> stateMachine;

    public Character()
    {
        stateMachine = new StateMachine<string>();

        // 添加 Idle 状态
        stateMachine.AddState("Idle", OnIdleStart, OnIdleUpdate, OnIdleStop);

        // 添加 Walking 状态
        stateMachine.AddState("Walking", OnWalkingStart, OnWalkingUpdate, OnWalkingStop);

        // 添加 Running 状态
        stateMachine.AddState("Running", OnRunningStart, OnRunningUpdate, OnRunningStop);

        // 设置初始状态
        stateMachine.CurrentState = "Idle";
    }

    public void Update()
    {
        // 更新当前状态
        stateMachine.Update();
    }

    private void OnIdleStart()
    {
        Console.WriteLine("进入 Idle 状态");
    }

    private void OnIdleUpdate()
    {
        Console.WriteLine("Idle 状态更新中...");
    }

    private void OnIdleStop()
    {
        Console.WriteLine("退出 Idle 状态");
    }

    private void OnWalkingStart()
    {
        Console.WriteLine("进入 Walking 状态");
    }

    private void OnWalkingUpdate()
    {
        Console.WriteLine("Walking 状态更新中...");
    }

    private void OnWalkingStop()
    {
        Console.WriteLine("退出 Walking 状态");
    }

    private void OnRunningStart()
    {
        Console.WriteLine("进入 Running 状态");
    }

    private void OnRunningUpdate()
    {
        Console.WriteLine("Running 状态更新中...");
    }

    private void OnRunningStop()
    {
        Console.WriteLine("退出 Running 状态");
    }

    public void ChangeState(string newState)
    {
        stateMachine.CurrentState = newState;
    }
}

public class Program
{
    public static void Main()
    {
        Character character = new Character();

        // 模拟游戏循环
        for (int i = 0; i < 10; i++)
        {
            character.Update();

            if (i == 2)
            {
                character.ChangeState("Walking");
            }
            else if (i == 5)
            {
                character.ChangeState("Running");
            }
        }
    }
}